Index: app/src/main/java/com/example/infinitycrop/ui/dashboard/DashboardFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.infinitycrop.ui.dashboard;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.ColorStateList;\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationManager;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport android.os.StrictMode;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Switch;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.comun.Mqtt;\r\nimport com.example.infinitycrop.MainActivity;\r\nimport com.example.infinitycrop.R;\r\nimport com.example.infinitycrop.ui.recycler_control.StaticRvAdapter;\r\nimport com.example.infinitycrop.ui.recycler_control.StaticRvModel;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.annotations.NotNull;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.squareup.okhttp.Call;\r\nimport com.squareup.okhttp.Callback;\r\nimport com.squareup.okhttp.OkHttpClient;\r\nimport com.squareup.okhttp.Request;\r\nimport com.squareup.okhttp.Response;\r\n\r\nimport org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;\r\nimport org.eclipse.paho.client.mqttv3.MqttCallback;\r\nimport org.eclipse.paho.client.mqttv3.MqttClient;\r\nimport org.eclipse.paho.client.mqttv3.MqttConnectOptions;\r\nimport org.eclipse.paho.client.mqttv3.MqttException;\r\nimport org.eclipse.paho.client.mqttv3.MqttMessage;\r\nimport org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport static com.example.comun.Mqtt.topicRoot;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link DashboardFragment#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class DashboardFragment extends Fragment implements MqttCallback{\r\n\r\n    private RecyclerView recyclerView;\r\n    private StaticRvAdapter staticRvAdapter;\r\n    private TabLayout tabLayout;\r\n    private ViewPager viewPager;\r\n    //WEATHER\r\n    private static  final int REQUEST_LOCATION=1;\r\n    double lat;\r\n    double longi;\r\n\r\n    TextView showLocationTxt;\r\n\r\n    LocationManager locationManager;\r\n    String latitude,longitude;\r\n\r\n    TextView view_city;\r\n    TextView view_temp;\r\n    TextView view_desc;\r\n    TextView view_country;\r\n\r\n    ImageView view_weather;\r\n    //\r\n\r\n\r\n    public static MqttClient client = null;\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public DashboardFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment DashboardFragment.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static DashboardFragment newInstance(String param1, String param2) {\r\n        DashboardFragment fragment = new DashboardFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View v= inflater.inflate(R.layout.fragment_dashboard, container, false);\r\n        //FIREBASE\r\n        //Recojo los datos del usuario\r\n        final FirebaseAuth mAuth = FirebaseAuth.getInstance();\r\n        final FirebaseUser usuario = mAuth.getCurrentUser();\r\n        final FirebaseFirestore fStore=FirebaseFirestore.getInstance();\r\n        String idUser=usuario.getUid();\r\n        //guardo el nombre en un textView\r\n        /*final TextView nombre = (TextView) v.findViewById(R.id.hello_text);\r\n        String res=\"Hola\"+\" \"+usuario.getDisplayName();\r\n        nombre.setText(res);\r\n        DocumentReference documentReference=fStore.collection(\"Usuarios\").document(idUser);\r\n        documentReference.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot snapshot, @Nullable FirebaseFirestoreException e) {\r\n                if(usuario.getDisplayName() == null){\r\n                    String res1=\"Hola\"+\" \"+snapshot.getString(\"username\");\r\n                    nombre.setText(res1);\r\n                }\r\n            }\r\n        });*/\r\n\r\n        //switch methods\r\n /*     Switch switchLuz = (Switch) v.findViewById(R.id.switchLuminosidadGeneral);\r\n        switchLuz.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                if (isChecked) {\r\n                    // The toggle is enabled\r\n                    enviarLucesOn();\r\n                } else {\r\n                    // The toggle is disabled\r\n                    enviarLucesOff();\r\n                }\r\n            }\r\n        });*/\r\n\r\n\r\n        //WEATHER\r\n        ActivityCompat.requestPermissions(getActivity(),new String[]\r\n                {Manifest.permission.ACCESS_FINE_LOCATION}, REQUEST_LOCATION);\r\n\r\n        view_city =v.findViewById(R.id.town);\r\n        view_city.setText(\"\");\r\n        view_temp =v.findViewById(R.id.temp);\r\n        view_temp.setText(\"\");\r\n        view_desc =v.findViewById(R.id.desc);\r\n        view_desc.setText(\"\");\r\n        view_country=v.findViewById(R.id.txtCountry);\r\n        view_country.setText(\"\");\r\n        view_weather =v.findViewById(R.id.wheather_image);\r\n\r\n        locationManager=(LocationManager)getActivity().getSystemService(Context.LOCATION_SERVICE);\r\n        inicioGPS();\r\n        //\r\n\r\n\r\n\r\n\r\n        //RECYCLER VIEW\r\n        ArrayList<StaticRvModel> item=new ArrayList<>();\r\n        item.add(new StaticRvModel(R.drawable.icons_sun,\"Soleado\"));\r\n        item.add(new StaticRvModel(R.drawable.icons_night_mode,\"Nocturno\"));\r\n        item.add(new StaticRvModel(R.drawable.icons_energy_saving,\"Ahorro\"));\r\n        item.add(new StaticRvModel(R.drawable.icons_power_off,\"Apagado\"));\r\n        item.add(new StaticRvModel(R.drawable.icons_custom,\"Custom\"));\r\n\r\n        final TextView medidasT=v.findViewById(R.id.medidaTemperaturaGeneral);\r\n        final TextView medidasH=v.findViewById(R.id.medidaHumedadGeneral);\r\n        final TextView medidasS=v.findViewById(R.id.medidaSalinidadGeneral);\r\n        final TextView medidasL=v.findViewById(R.id.medidasLuminosidadGeneral);\r\n\r\n        recyclerView=v.findViewById(R.id.rv_1);\r\n        staticRvAdapter=new StaticRvAdapter(item,medidasT,medidasH,medidasS,medidasL);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(requireContext(),LinearLayoutManager.HORIZONTAL,false));\r\n        recyclerView.setAdapter(staticRvAdapter);\r\n\r\n\r\n        //TABS\r\n        tabLayout = v.findViewById(R.id.tab_layout);\r\n        viewPager = v.findViewById(R.id.view_pager);\r\n         //Array\r\n        ArrayList<String> arrayList = new ArrayList<>();\r\n\r\n        //set up with viewpager\r\n        tabLayout.setupWithViewPager(viewPager);\r\n\r\n        TabAdapter adapter = new TabAdapter(getActivity().getSupportFragmentManager());\r\n        //Pesta√±as\r\n        adapter.addFrag(new GeneralFragment(),\"General\");\r\n        adapter.addFrag(new Planta1Fragment(),\"Planta 1\");\r\n        adapter.addFrag(new Planta2Fragment(),\"Planta 2\");\r\n\r\n        viewPager.setAdapter(adapter );\r\n\r\n        /*((MainActivity)getActivity()).ola();*/\r\n     /*   //LEER DATOS FIREBASE\r\n        //Temperatura\r\n       DocumentReference documentTemperatura=fStore.collection(\"SensoresA-T\").document(\"Temperatura\");\r\n        documentTemperatura.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot snapshot, @Nullable FirebaseFirestoreException e) {\r\n                String resMediTemp=snapshot.getString(\"Medici√≥n\")+\"¬∞C\";\r\n                medidasT.setText(resMediTemp);\r\n            }\r\n        });\r\n        //Humedad\r\n        DocumentReference documentHumedad=fStore.collection(\"SensoresA-T\").document(\"Humedad\");\r\n        documentHumedad.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot snapshot, @Nullable FirebaseFirestoreException e) {\r\n                String resMediHum=snapshot.getString(\"Porcentaje\")+\"%\";\r\n                medidasH.setText(resMediHum);\r\n            }\r\n        });\r\n        //Iluminaci√≥n\r\n        DocumentReference documentIluminaci√≥n=fStore.collection(\"SensoresA-T\").document(\"Iluminaci√≥n\");\r\n        documentIluminaci√≥n.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot snapshot, @Nullable FirebaseFirestoreException e) {\r\n                String resMediIlum=snapshot.getString(\"Porcentaje\")+\"%\";\r\n                medidasL.setText(resMediIlum);\r\n            }\r\n        });\r\n        //Temperatura ambiente\r\n        DocumentReference documentambiente=fStore.collection(\"SensoresA-T\").document(\"Temperatura ambiente\");\r\n        documentambiente.addSnapshotListener(new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot snapshot, @Nullable FirebaseFirestoreException e) {\r\n                String resMediIAmb=snapshot.getString(\"Medici√≥n\")+\"¬∞C\";\r\n                medidasS.setText(resMediIAmb);\r\n            }\r\n        });\r\n\r\n      */\r\n\r\n        return v;\r\n    }\r\n\r\n    public void enviarLucesOff(){\r\n        try {\r\n            client = new MqttClient(Mqtt.broker, Mqtt.clientId, new\r\n                    MemoryPersistence());\r\n        } catch (MqttException e) {\r\n            e.printStackTrace();\r\n        }\r\n        MqttConnectOptions connOpts = new MqttConnectOptions();\r\n        connOpts.setCleanSession(true);\r\n        connOpts.setKeepAliveInterval(60);\r\n        connOpts.setWill(topicRoot+\"WillTopic\", \"App desconectada\".getBytes(),Mqtt.qos, false);\r\n\r\n        try {\r\n            client.connect(connOpts);\r\n        } catch (MqttException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        //conexi√≥n con el broker Root1 = Lector de datos\r\n        //nos subscribimos a topic lectura\r\n        try {\r\n            Log.i(Mqtt.TAG, \"Subscrito a \" + topicRoot + \"luces\");//aqui est√° el root al que nos subscribimos si se quiere modificar se tiene que modificar este\r\n            client.subscribe(topicRoot + \"luces\", Mqtt.qos);\r\n            client.setCallback((MqttCallback) this);\r\n        } catch (MqttException e) {\r\n            Log.e(Mqtt.TAG, \"Error al suscribir.\", e);\r\n        }\r\n        try {\r\n            Log.i(Mqtt.TAG, \"Publicando mensaje: \" + \"mensaje\");\r\n            MqttMessage message = new MqttMessage(\"luces OFF\".getBytes());\r\n            message.setQos(Mqtt.qos);\r\n            message.setRetained(false);\r\n            client.publish(topicRoot+\"luces\", message);\r\n        } catch (MqttException e) {\r\n            Log.e(Mqtt.TAG, \"Error al publicar.\", e);\r\n        }\r\n    }\r\n    public void enviarLucesOn(){\r\n        try {\r\n            client = new MqttClient(Mqtt.broker, Mqtt.clientId, new\r\n                    MemoryPersistence());\r\n        } catch (MqttException e) {\r\n            e.printStackTrace();\r\n        }\r\n        MqttConnectOptions connOpts = new MqttConnectOptions();\r\n        connOpts.setCleanSession(true);\r\n        connOpts.setKeepAliveInterval(60);\r\n        connOpts.setWill(topicRoot+\"WillTopic\", \"App desconectada\".getBytes(),Mqtt.qos, false);\r\n\r\n        try {\r\n            client.connect(connOpts);\r\n        } catch (MqttException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        //conexi√≥n con el broker Root1 = Lector de datos\r\n        //nos subscribimos a topic lectura\r\n        try {\r\n            Log.i(Mqtt.TAG, \"Subscrito a \" + topicRoot + \"luces\");//aqui est√° el root al que nos subscribimos si se quiere modificar se tiene que modificar este\r\n            client.subscribe(topicRoot + \"luces\", Mqtt.qos);\r\n            client.setCallback((MqttCallback) this);\r\n        } catch (MqttException e) {\r\n            Log.e(Mqtt.TAG, \"Error al suscribir.\", e);\r\n        }\r\n        try {\r\n            Log.i(Mqtt.TAG, \"Publicando mensaje: \" + \"mensaje\");\r\n            MqttMessage message = new MqttMessage(\"luces ON\".getBytes());\r\n            message.setQos(Mqtt.qos);\r\n            message.setRetained(false);\r\n            client.publish(topicRoot+\"luces\", message);\r\n        } catch (MqttException e) {\r\n            Log.e(Mqtt.TAG, \"Error al publicar.\", e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void connectionLost(Throwable cause) {\r\n        Log.d(Mqtt.TAG, \"Conexi√≥n perdida\");\r\n    }\r\n\r\n    @Override\r\n    public void messageArrived(String topic, MqttMessage message) throws Exception {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void deliveryComplete(IMqttDeliveryToken token) {\r\n        Log.d(Mqtt.TAG, \"Entrega completa\");\r\n    }\r\n\r\n\r\n    //WEATHER METHODS\r\n    private void api_key(final String City) {\r\n        OkHttpClient client = new OkHttpClient();\r\n\r\n        Request request = new Request.Builder()\r\n                .url(\"https://api.openweathermap.org/data/2.5/weather?q=\" + City + \"&appid=a6f41d947e0542a26580bcd5c3fb90ef&units=metric\")\r\n                .get()\r\n                .build();\r\n        StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();\r\n        StrictMode.setThreadPolicy(policy);\r\n        try {\r\n            Response response = client.newCall(request).execute();\r\n            client.newCall(request).enqueue(new Callback() {\r\n                @Override\r\n                public void onFailure(Request request, IOException e) {\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onResponse(Response response) throws IOException {\r\n                    String responseData = response.body().string();\r\n                    try {\r\n                        JSONObject json = new JSONObject(responseData);\r\n                        JSONArray array = json.getJSONArray(\"weather\");\r\n                        JSONObject object = array.getJSONObject(0);\r\n\r\n                        String description = object.getString(\"description\");\r\n                        String icons = object.getString(\"icon\");\r\n\r\n                        JSONObject temp1 = json.getJSONObject(\"main\");\r\n                        Double Temperature = temp1.getDouble(\"temp\");\r\n\r\n                        setText(view_city, City);\r\n\r\n                        String temps = Math.round(Temperature) + \" ¬∞C\";\r\n                        setText(view_temp, temps);\r\n                        setText(view_desc, description);\r\n                        setImage(view_weather, icons);\r\n\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n\r\n            });\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    private void setText(final TextView text, final String value) {\r\n        getActivity().runOnUiThread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                text.setText(value);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setImage(final ImageView imageView, final String value) {\r\n        getActivity().runOnUiThread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                //paste switch\r\n                switch (value) {\r\n                    case \"01d\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d01d));\r\n                        break;\r\n                    case \"01n\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d01d));\r\n                        break;\r\n                    case \"02d\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d02d));\r\n                        break;\r\n                    case \"02n\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d02d));\r\n                        break;\r\n                    case \"03d\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d03d));\r\n                        break;\r\n                    case \"03n\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d03d));\r\n                        break;\r\n                    case \"04d\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d04d));\r\n                        break;\r\n                    case \"04n\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d04d));\r\n                        break;\r\n                    case \"09d\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d09d));\r\n                        break;\r\n                    case \"09n\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d09d));\r\n                        break;\r\n                    case \"10d\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d10d));\r\n                        break;\r\n                    case \"10n\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d10d));\r\n                        break;\r\n                    case \"11d\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d11d));\r\n                        break;\r\n                    case \"11n\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d11d));\r\n                        break;\r\n                    case \"13d\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d13d));\r\n                        break;\r\n                    case \"13n\":\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.d13d));\r\n                        break;\r\n                    default:\r\n                        imageView.setImageDrawable(getResources().getDrawable(R.drawable.wheather));\r\n\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    //App location\r\n    private void getLocation() {\r\n\r\n        //Check Permissions again\r\n\r\n        if (ActivityCompat.checkSelfPermission(\r\n                getContext(),Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\r\n                getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, REQUEST_LOCATION);\r\n        } else {\r\n\r\n            Location LocationNetwork=locationManager.getLastKnownLocation(LocationManager.NETWORK_PROVIDER);\r\n             if (LocationNetwork !=null)\r\n            {\r\n                double lat=LocationNetwork.getLatitude();\r\n                double longi=LocationNetwork.getLongitude();\r\n\r\n                latitude=String.valueOf(lat);\r\n                longitude=String.valueOf(longi);\r\n                loc_func(LocationNetwork);\r\n                api_key(String.valueOf(view_city.getText()));\r\n                showLocationTxt.setText(\"Your Location:\"+\"\\n\"+\"Latitude= \"+latitude+\"\\n\"+\"Longitude= \"+longitude);\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    private void OnGPS() {\r\n\r\n        final AlertDialog.Builder builder= new AlertDialog.Builder(getContext());\r\n\r\n        builder.setMessage(\"Enable GPS\").setCancelable(false).setPositiveButton(\"YES\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                startActivity(new Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS));\r\n                getLocation();\r\n            }\r\n        }).setNegativeButton(\"NO\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n\r\n                dialog.cancel();\r\n            }\r\n        });\r\n        final AlertDialog alertDialog=builder.create();\r\n        alertDialog.show();\r\n    }\r\n\r\n    private void loc_func(Location location){\r\n        try {\r\n            Geocoder geocoder=new Geocoder(getContext());\r\n            List<Address> addresses = geocoder.getFromLocation(lat, longi, 1);\r\n            String address = addresses.get(0).getSubLocality();\r\n            String cityName = addresses.get(0).getLocality();\r\n            String stateName = addresses.get(0).getAdminArea();\r\n            String country = addresses.get(0).getCountryName();\r\n            //txt_paddress.setText(address);\r\n            view_city.setText(cityName);\r\n            view_country.setText(country);\r\n            //txt_state.setText(stateName);*/\r\n\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n            Toast.makeText(getContext(), \"Error:\"+e, Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private void inicioGPS(){\r\n\r\n\r\n        //Check gps is enable or not\r\n\r\n        if (!locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER))\r\n        {\r\n            //Write Function To enable gps\r\n\r\n            OnGPS();\r\n        }\r\n        else\r\n        {\r\n            //GPS is already On then\r\n\r\n            getLocation();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/infinitycrop/ui/dashboard/DashboardFragment.java	(revision 38f77cc52ec1598af6f795fb72fde847b8f0c5cf)
+++ app/src/main/java/com/example/infinitycrop/ui/dashboard/DashboardFragment.java	(date 1609191349849)
@@ -505,7 +505,7 @@
 
         //Check Permissions again
 
-        if (ActivityCompat.checkSelfPermission(
+        /*if (ActivityCompat.checkSelfPermission(
                 getContext(),Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(
                 getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
             ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, REQUEST_LOCATION);
@@ -524,7 +524,7 @@
                 showLocationTxt.setText("Your Location:"+"\n"+"Latitude= "+latitude+"\n"+"Longitude= "+longitude);
             }
 
-        }
+        }*/
 
     }
 
Index: app/src/main/java/com/example/infinitycrop/ui/dashboard/GeneralFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.infinitycrop.ui.dashboard;\n\nimport android.os.Bundle;\n\nimport androidx.fragment.app.Fragment;\n\nimport android.util.Log;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.CompoundButton;\nimport android.widget.Switch;\nimport android.widget.TextView;\n\nimport com.example.comun.Mqtt;\nimport com.example.infinitycrop.R;\n\nimport org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;\nimport org.eclipse.paho.client.mqttv3.MqttCallback;\nimport org.eclipse.paho.client.mqttv3.MqttClient;\nimport org.eclipse.paho.client.mqttv3.MqttConnectOptions;\nimport org.eclipse.paho.client.mqttv3.MqttException;\nimport org.eclipse.paho.client.mqttv3.MqttMessage;\nimport org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;\n\nimport static com.example.comun.Mqtt.topicRoot;\n\n/**\n * A simple {@link Fragment} subclass.\n * Use the {@link GeneralFragment#newInstance} factory method to\n * create an instance of this fragment.\n */\npublic class GeneralFragment extends Fragment implements MqttCallback{\n    public static MqttClient client = null;\n    // TODO: Rename parameter arguments, choose names that match\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\n    private static final String ARG_PARAM1 = \"param1\";\n    private static final String ARG_PARAM2 = \"param2\";\n\n    // TODO: Rename and change types of parameters\n    private String mParam1;\n    private String mParam2;\n\n    public GeneralFragment() {\n        // Required empty public constructor\n    }\n\n    /**\n     * Use this factory method to create a new instance of\n     * this fragment using the provided parameters.\n     *\n     * @param param1 Parameter 1.\n     * @param param2 Parameter 2.\n     * @return A new instance of fragment GeneralFragment.\n     */\n    // TODO: Rename and change types and number of parameters\n    public static GeneralFragment newInstance(String param1, String param2) {\n        GeneralFragment fragment = new GeneralFragment();\n        Bundle args = new Bundle();\n        args.putString(ARG_PARAM1, param1);\n        args.putString(ARG_PARAM2, param2);\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            mParam1 = getArguments().getString(ARG_PARAM1);\n            mParam2 = getArguments().getString(ARG_PARAM2);\n        }\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        View v = inflater.inflate(R.layout.fragment_general, container, false);\n        //switch methods\n        Switch switchLuz = (Switch) v.findViewById(R.id.switchLuminosidadGeneral);\n        switchLuz.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n                if (isChecked) {\n                    // The toggle is enabled\n                    enviarLucesOn();\n                } else {\n                    // The toggle is disabled\n                    enviarLucesOff();\n                }\n            }\n        });\n        return v;\n    }\n    public void enviarLucesOff(){\n        try {\n            client = new MqttClient(Mqtt.broker, Mqtt.clientId, new\n                    MemoryPersistence());\n        } catch (MqttException e) {\n            e.printStackTrace();\n        }\n        MqttConnectOptions connOpts = new MqttConnectOptions();\n        connOpts.setCleanSession(true);\n        connOpts.setKeepAliveInterval(60);\n        connOpts.setWill(topicRoot+\"WillTopic\", \"App desconectada\".getBytes(),Mqtt.qos, false);\n\n        try {\n            client.connect(connOpts);\n        } catch (MqttException e) {\n            e.printStackTrace();\n        }\n\n        //conexi√≥n con el broker Root1 = Lector de datos\n        //nos subscribimos a topic lectura\n        try {\n            Log.i(Mqtt.TAG, \"Subscrito a \" + topicRoot + \"luces\");//aqui est√° el root al que nos subscribimos si se quiere modificar se tiene que modificar este\n            client.subscribe(topicRoot + \"luces\", Mqtt.qos);\n            client.setCallback((MqttCallback) this);\n        } catch (MqttException e) {\n            Log.e(Mqtt.TAG, \"Error al suscribir.\", e);\n        }\n        try {\n            Log.i(Mqtt.TAG, \"Publicando mensaje: \" + \"mensaje\");\n            MqttMessage message = new MqttMessage(\"Superior OFF\".getBytes());\n            message.setQos(Mqtt.qos);\n            message.setRetained(false);\n            client.publish(topicRoot+\"luces\", message);\n        } catch (MqttException e) {\n            Log.e(Mqtt.TAG, \"Error al publicar.\", e);\n        }\n    }\n    public void enviarLucesOn(){\n        try {\n            client = new MqttClient(Mqtt.broker, Mqtt.clientId, new\n                    MemoryPersistence());\n        } catch (MqttException e) {\n            e.printStackTrace();\n        }\n        MqttConnectOptions connOpts = new MqttConnectOptions();\n        connOpts.setCleanSession(true);\n        connOpts.setKeepAliveInterval(60);\n        connOpts.setWill(topicRoot+\"WillTopic\", \"App desconectada\".getBytes(),Mqtt.qos, false);\n\n        try {\n            client.connect(connOpts);\n        } catch (MqttException e) {\n            e.printStackTrace();\n        }\n\n        //conexi√≥n con el broker Root1 = Lector de datos\n        //nos subscribimos a topic lectura\n        try {\n            Log.i(Mqtt.TAG, \"Subscrito a \" + topicRoot + \"luces\");//aqui est√° el root al que nos subscribimos si se quiere modificar se tiene que modificar este\n            client.subscribe(topicRoot + \"luces\", Mqtt.qos);\n            client.setCallback((MqttCallback) this);\n        } catch (MqttException e) {\n            Log.e(Mqtt.TAG, \"Error al suscribir.\", e);\n        }\n        try {\n            Log.i(Mqtt.TAG, \"Publicando mensaje: \" + \"mensaje\");\n            MqttMessage message = new MqttMessage(\"Superior ON\".getBytes());\n            message.setQos(Mqtt.qos);\n            message.setRetained(false);\n            client.publish(topicRoot+\"luces\", message);\n        } catch (MqttException e) {\n            Log.e(Mqtt.TAG, \"Error al publicar.\", e);\n        }\n    }\n\n    @Override\n    public void connectionLost(Throwable cause) {\n        Log.d(Mqtt.TAG, \"Conexi√≥n perdida\");\n    }\n\n    @Override\n    public void messageArrived(String topic, MqttMessage message) throws Exception {\n\n    }\n\n    @Override\n    public void deliveryComplete(IMqttDeliveryToken token) {\n        Log.d(Mqtt.TAG, \"Entrega completa\");\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/infinitycrop/ui/dashboard/GeneralFragment.java	(revision 38f77cc52ec1598af6f795fb72fde847b8f0c5cf)
+++ app/src/main/java/com/example/infinitycrop/ui/dashboard/GeneralFragment.java	(date 1609360979620)
@@ -2,6 +2,7 @@
 
 import android.os.Bundle;
 
+import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
 
 import android.util.Log;
@@ -13,7 +14,14 @@
 import android.widget.TextView;
 
 import com.example.comun.Mqtt;
+import com.example.infinitycrop.MainActivity;
 import com.example.infinitycrop.R;
+import com.google.firebase.firestore.EventListener;
+import com.google.firebase.firestore.FirebaseFirestore;
+import com.google.firebase.firestore.FirebaseFirestoreException;
+import com.google.firebase.firestore.Query;
+import com.google.firebase.firestore.QueryDocumentSnapshot;
+import com.google.firebase.firestore.QuerySnapshot;
 
 import org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;
 import org.eclipse.paho.client.mqttv3.MqttCallback;
@@ -32,6 +40,8 @@
  */
 public class GeneralFragment extends Fragment implements MqttCallback{
     public static MqttClient client = null;
+    private String uid;
+    private FirebaseFirestore db;
     // TODO: Rename parameter arguments, choose names that match
     // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
     private static final String ARG_PARAM1 = "param1";
@@ -90,6 +100,45 @@
                 }
             }
         });
+        db = FirebaseFirestore.getInstance();
+        MainActivity myActivity = (MainActivity) getActivity();
+        final TextView medidaTemp=v.findViewById(R.id.medidaTemperaturaGeneral);
+        final TextView medidaHum=v.findViewById(R.id.medidaHumedadGeneral);
+        final TextView medidaHumAm=v.findViewById(R.id.medidaSalinidadGeneral);
+        final TextView medidaLuz=v.findViewById(R.id.medidasLuminosidadGeneral);
+        uid=myActivity.getMachineUID();
+        db.collection("Mediciones")
+                .whereEqualTo("machineId",uid)
+                .whereEqualTo("Planta","0")
+                .orderBy("Fecha", Query.Direction.DESCENDING)
+                .limit(1)
+                .addSnapshotListener(new EventListener<QuerySnapshot>() {
+                    @Override
+                    public void onEvent(@Nullable QuerySnapshot value,
+                                        @Nullable FirebaseFirestoreException e) {
+                        if (e != null) {
+                            return;
+                        }
+
+
+                        for (QueryDocumentSnapshot doc : value) {
+                            //Temperatura
+                            String medidaT=doc.getString("Temperatura");
+                            medidaTemp.setText(medidaT);
+                            //Humedad
+                            String medidaH=doc.getString("Humedad");
+                            medidaHum.setText(medidaH);
+                            //Humedad Ambiente
+                            String medidaHA=doc.getString("Humedad Ambiente");
+                            medidaHumAm.setText(medidaHA);
+                            //Luminosidad
+                            String medidaL=doc.getString("Luminosidad");
+                            medidaLuz.setText(medidaL);
+
+                        }
+
+                    }
+                });
         return v;
     }
     public void enviarLucesOff(){
Index: github.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>gpr.usr = 61469172\ngpr.key = 72a0f63b7097b413e8ff78a7dd6ca9412aaf232c
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- github.properties	(revision 38f77cc52ec1598af6f795fb72fde847b8f0c5cf)
+++ github.properties	(date 1609173892824)
@@ -1,2 +1,2 @@
-gpr.usr = 61469172
-gpr.key = 72a0f63b7097b413e8ff78a7dd6ca9412aaf232c
\ No newline at end of file
+gpr.usr = 61473165
+gpr.key = 9671a8c2e26934b214e49dd99b96077296ee2aca
\ No newline at end of file
Index: app/src/main/java/com/example/infinitycrop/ui/service/ServicioMqtt.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/infinitycrop/ui/service/ServicioMqtt.java	(date 1609359437907)
+++ app/src/main/java/com/example/infinitycrop/ui/service/ServicioMqtt.java	(date 1609359437907)
@@ -0,0 +1,114 @@
+package com.example.infinitycrop.ui.service;
+
+
+import android.app.Service;
+import android.content.Intent;
+import android.os.IBinder;
+import android.util.Log;
+import android.widget.Toast;
+
+
+import com.example.comun.Mqtt;
+import com.google.firebase.Timestamp;
+import com.google.firebase.firestore.FirebaseFirestore;
+
+import org.eclipse.paho.client.mqttv3.IMqttDeliveryToken;
+import org.eclipse.paho.client.mqttv3.MqttCallback;
+import org.eclipse.paho.client.mqttv3.MqttClient;
+import org.eclipse.paho.client.mqttv3.MqttConnectOptions;
+import org.eclipse.paho.client.mqttv3.MqttException;
+import org.eclipse.paho.client.mqttv3.MqttMessage;
+import org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;
+
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.HashMap;
+import java.util.Map;
+
+import static com.example.comun.Mqtt.topicRoot;
+
+
+public class ServicioMqtt extends Service implements MqttCallback {
+
+    public static MqttClient client = null;
+    private FirebaseFirestore db;
+    private String getId;
+
+    @Override public void onCreate(){
+        Toast.makeText(this,"Conectando con tu maquina......", Toast.LENGTH_LONG).show();
+        db = FirebaseFirestore.getInstance();
+        try {
+            client = new MqttClient(Mqtt.broker, Mqtt.clientId, new
+                    MemoryPersistence());
+        } catch (MqttException e) {
+            e.printStackTrace();
+        }
+        MqttConnectOptions connOpts = new MqttConnectOptions();
+        connOpts.setCleanSession(true);
+        connOpts.setKeepAliveInterval(60);
+        connOpts.setWill(topicRoot+"WillTopic", "App desconectada".getBytes(),Mqtt.qos, false);
+        try {
+            client.connect(connOpts);
+        } catch (MqttException e) {
+            e.printStackTrace();
+        }
+
+        // Nos suscribimos al topic rfid
+        try {
+            Log.i(Mqtt.TAG, "Suscrito a " + topicRoot+"lecturaDatos");
+            client.subscribe(topicRoot+"lecturaDatos", Mqtt.qos);
+            client.setCallback(this);
+        } catch (MqttException e) {
+            Log.e(Mqtt.TAG, "Error al suscribir.", e);
+        }
+    }
+
+    @Override
+    public int onStartCommand(Intent intenc, int flags, int idArranque) {
+        getId =intenc.getStringExtra("machine");
+        Toast.makeText(this, getId , Toast.LENGTH_SHORT).show();
+
+        return START_STICKY;
+    }
+    @Override public void onDestroy() {
+
+    }
+    @Override public IBinder onBind(Intent intencion) {
+        return null;
+    }
+
+    @Override
+    public void connectionLost(Throwable cause) {
+
+    }
+
+    @Override
+    public void messageArrived(String topic, MqttMessage message) throws Exception {
+        String payload = new String(message.getPayload());
+
+        String[] parts = payload.split("-");
+        String part1 = parts[0];
+        String part2 = parts[1];
+        String part3 = parts[2];
+        String part4 = parts[3];
+        String part5 = parts[4];
+        String part6 = parts[5];
+
+        Map<String, Object> user = new HashMap<>();
+        user.put("Humedad", part2);
+        user.put("Humedad Ambiente", part3);
+        user.put("Luminosidad", part4);
+        user.put("Temperatura", part5);
+        user.put("Fecha", new Timestamp(new Date()));
+        user.put("machineId", part1);
+        user.put("Planta", part6);
+
+        db.collection("Mediciones").document().set(user);
+        //db.collection("users").document("9XncSt20DYUov9gGVKoB").set(user);
+    }
+
+    @Override
+    public void deliveryComplete(IMqttDeliveryToken token) {
+
+    }
+}
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    package=\"com.example.infinitycrop\">\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\n    <uses-permission android:name=\"com.google.android.things.permission.MANAGE_INPUT_DRIVERS\" />\n    <uses-permission android:name=\"com.google.android.things.permission.USE_PERIPHERAL_IO\" />\n    <!--Permisos Qr-->\n    <uses-permission android:name=\"android.permission.CAMERA\"/>\n    <uses-feature android:name=\"android.hardware.camera\"></uses-feature>\n    <uses-feature android:name=\"android.hardware.camera.autofocus\"></uses-feature>\n\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher\"\n        android:theme=\"@style/AppThemeHome\"\n        >\n\n        <activity android:name=\".MainActivity\" android:theme=\"@style/SplashTheme\">\n        </activity>\n\n        <activity android:name=\"com.example.infinitycrop.ui.LoadAnimations.IntroductoryActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n        <activity android:name=\".ui.profile.settings.AboutInfinityCrap\">\n\n        </activity>\n        <activity android:name=\".ui.profile.settings.HelpProfile\">\n\n        </activity>\n        <activity android:name=\".ui.list_machine.MainActivityMachineList\"></activity>\n        <activity android:name=\".ui.list_machine.AddMachine\"></activity>\n        <activity android:name=\".ui.logmail.RegisterActivity\"></activity>\n        <activity android:name=\".ui.logmail.LoginActivity\"></activity>\n        <activity android:name=\".ui.list_machine.CaptureAct\"></activity>\n        <activity android:name=\"com.example.infinitycrop.ui.login.LogActivity\"></activity>\n        <activity android:name=\".ui.LoadAnimations.IntroductoryActivity2\"></activity>\n        <activity android:name=\".ui.profile.settings.ModifyProfile\"></activity>\n\n\n\n\n        <meta-data android:name=\"com.google.android.geo.API_KEY\"\n            android:value=\"@string/google_maps_key\" />\n\n        <meta-data android:name=\"com.facebook.sdk.ApplicationId\"\n            tools:replace=\"android:value\"\n            android:value=\"@string/facebook_app_id\"/>\n        <meta-data\n            android:name=\"preloaded_fonts\"\n            android:resource=\"@array/preloaded_fonts\" />\n\n\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 38f77cc52ec1598af6f795fb72fde847b8f0c5cf)
+++ app/src/main/AndroidManifest.xml	(date 1609352360254)
@@ -24,7 +24,7 @@
 
         <activity android:name=".MainActivity" android:theme="@style/SplashTheme">
         </activity>
-
+        <service android:name="com.example.infinitycrop.ui.service.ServicioMqtt" />
         <activity android:name="com.example.infinitycrop.ui.LoadAnimations.IntroductoryActivity">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
Index: app/src/main/java/com/example/infinitycrop/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.infinitycrop;\nimport android.os.Bundle;\nimport android.widget.Toast;\n\nimport com.example.infinitycrop.ui.control_panel.Control_panelFragment;\nimport com.example.infinitycrop.ui.dashboard.DashboardFragment;\nimport com.example.infinitycrop.ui.graphic.GraphicFragment;\nimport com.example.infinitycrop.ui.map.MapFragment;\nimport com.example.infinitycrop.ui.profile.ProfileFragment;\nimport com.google.firebase.firestore.FirebaseFirestore;\nimport com.ismaeldivita.chipnavigation.ChipNavigationBar;\n\nimport androidx.annotation.NonNull;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.fragment.app.Fragment;\nimport androidx.fragment.app.FragmentManager;\nimport androidx.fragment.app.FragmentPagerAdapter;\nimport androidx.viewpager.widget.ViewPager;\n\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class MainActivity extends AppCompatActivity {\n\n    private ChipNavigationBar chipNavigationBar;\n    private ViewPager viewPager;\n    private Fragment fragment=null;\n    private int index = 0;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        setTheme(R.style.AppThemeHome);\n        super.onCreate(savedInstanceState);\n\n        Bundle extras = getIntent().getExtras();\n        String s = extras.getString(\"machine\");\n        Toast.makeText(this, s , Toast.LENGTH_SHORT).show();\n\n        setContentView(R.layout.activity_main);\n        chipNavigationBar=findViewById(R.id.chipNavigation);\n        viewPager = findViewById(R.id.view_pager11);\n        chipNavigationBar.setItemSelected(R.id.home,true);\n\n        ViewPagerAdapter viewPagerAdapter = new ViewPagerAdapter(getSupportFragmentManager());\n        viewPager.setAdapter(viewPagerAdapter);\n\n        final ViewPagerAdapter adapter = new ViewPagerAdapter(getSupportFragmentManager());\n        final DashboardFragment fragment_1 = new DashboardFragment();\n        //final GraphicFragment fragment_2 = new GraphicFragment();\n        final Control_panelFragment fragment_2 = new Control_panelFragment();\n        final MapFragment fragment_3 = new MapFragment();\n        final ProfileFragment fragment_4 = new ProfileFragment();\n        adapter.addFragment(fragment_1);\n        adapter.addFragment(fragment_2);\n        adapter.addFragment(fragment_3);\n        adapter.addFragment(fragment_4);\n        viewPager.setAdapter(adapter);\n        viewPager.setOffscreenPageLimit(4);\n        index = 1;\n        chipNavigationBar.setOnItemSelectedListener(new ChipNavigationBar.OnItemSelectedListener() {\n            @Override\n            public void onItemSelected(int i) {\n                switch(i){\n                    case R.id.home:\n                        viewPager.setCurrentItem(0);\n                        break;\n                    case R.id.graphics:\n                        viewPager.setCurrentItem(1);\n                        break;\n                    case R.id.notifications:\n                        viewPager.setCurrentItem(2);\n                        break;\n                    case R.id.profile:\n                        viewPager.setCurrentItem(3);\n                        break;\n                }\n\n\n            }\n        });\n\n\n        viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {\n            @Override\n            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\n\n            }\n\n            @Override\n            public void onPageSelected(int position) {\n\n                if (position == 0){\n\n                    chipNavigationBar.setItemSelected(R.id.home, true);\n                    chipNavigationBar.setOnItemSelectedListener(new ChipNavigationBar.OnItemSelectedListener() {\n                        @Override\n                        public void onItemSelected(int id) {\n\n                            switch(id){\n                                case R.id.home:\n                                    viewPager.setCurrentItem(0);\n                                    break;\n                                case R.id.graphics:\n                                    viewPager.setCurrentItem(1);\n                                    break;\n                                case R.id.notifications:\n                                    viewPager.setCurrentItem(2);\n                                    break;\n                                case R.id.profile:\n                                    viewPager.setCurrentItem(3);\n                                    break;\n                            }\n                        }\n                    });\n\n                    index = 0;\n\n                }else if (position == 1){\n\n                    chipNavigationBar.setItemSelected(R.id.graphics, true);\n\n                    if(index == 0 || index == 2){\n\n                        //fragment_2.downloadPlates_2();\n                    }\n                    index = 1;\n                    //Toast.makeText(Home.this, \"\"+index, Toast.LENGTH_SHORT).show();\n                }else if (position == 2){\n\n                    chipNavigationBar.setItemSelected(R.id.notifications, true);\n                    chipNavigationBar.setOnItemSelectedListener(new ChipNavigationBar.OnItemSelectedListener() {\n                        @Override\n                        public void onItemSelected(int id) {\n\n                            switch(id){\n                                case R.id.home:\n                                    viewPager.setCurrentItem(0);\n                                    break;\n                                case R.id.graphics:\n                                    viewPager.setCurrentItem(1);\n                                    break;\n                                case R.id.notifications:\n                                    viewPager.setCurrentItem(2);\n                                    break;\n                                case R.id.profile:\n                                    viewPager.setCurrentItem(3);\n                                    break;\n                            }\n                        }\n                    });\n\n                    index = 2;\n\n                }else if (position == 3){\n\n                    chipNavigationBar.setItemSelected(R.id.profile, true);\n                    chipNavigationBar.setOnItemSelectedListener(new ChipNavigationBar.OnItemSelectedListener() {\n                        @Override\n                        public void onItemSelected(int id) {\n\n                            switch(id){\n                                case R.id.home:\n                                    viewPager.setCurrentItem(0);\n                                    break;\n                                case R.id.graphics:\n                                    viewPager.setCurrentItem(1);\n                                    break;\n                                case R.id.notifications:\n                                    viewPager.setCurrentItem(2);\n                                    break;\n                                case R.id.profile:\n                                    viewPager.setCurrentItem(3);\n                                    break;\n                            }\n                        }\n                    });\n\n                    index = 3;\n                }\n            }\n\n            @Override\n            public void onPageScrollStateChanged(int state) {\n\n            }\n        });\n    }\n\n\n    class ViewPagerAdapter extends FragmentPagerAdapter {\n\n\n\n        private ArrayList<Fragment> fragments;\n        private ArrayList<String> titles;\n\n        ViewPagerAdapter (FragmentManager fm){\n            super(fm);\n            this.fragments = new ArrayList<>();\n            this.titles = new ArrayList<>();\n\n        }\n\n        @NonNull\n        @Override\n        public Fragment getItem(int position) {\n            return fragments.get(position);\n        }\n\n        @Override\n        public int getCount() {\n            return fragments.size();\n        }\n\n        public void addFragment(Fragment fragment){\n            fragments.add(fragment);\n\n        }\n\n    }\n\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/infinitycrop/MainActivity.java	(revision 38f77cc52ec1598af6f795fb72fde847b8f0c5cf)
+++ app/src/main/java/com/example/infinitycrop/MainActivity.java	(date 1609360237025)
@@ -1,4 +1,5 @@
 package com.example.infinitycrop;
+import android.content.Intent;
 import android.os.Bundle;
 import android.widget.Toast;
 
@@ -7,6 +8,7 @@
 import com.example.infinitycrop.ui.graphic.GraphicFragment;
 import com.example.infinitycrop.ui.map.MapFragment;
 import com.example.infinitycrop.ui.profile.ProfileFragment;
+import com.example.infinitycrop.ui.service.ServicioMqtt;
 import com.google.firebase.firestore.FirebaseFirestore;
 import com.ismaeldivita.chipnavigation.ChipNavigationBar;
 
@@ -28,15 +30,17 @@
     private ViewPager viewPager;
     private Fragment fragment=null;
     private int index = 0;
-
+    private String s;
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         setTheme(R.style.AppThemeHome);
         super.onCreate(savedInstanceState);
 
         Bundle extras = getIntent().getExtras();
-        String s = extras.getString("machine");
-        Toast.makeText(this, s , Toast.LENGTH_SHORT).show();
+        s = extras.getString("description");
+        Intent intent = new Intent(MainActivity.this, ServicioMqtt.class);
+        intent.putExtra("machine", s);
+        startService(intent);
 
         setContentView(R.layout.activity_main);
         chipNavigationBar=findViewById(R.id.chipNavigation);
@@ -221,5 +225,10 @@
 
     }
 
+    public String getMachineUID(){
+        return s;
+    }
+
+
 
 }
\ No newline at end of file
Index: app/src/main/java/com/example/infinitycrop/ui/list_machine/MainActivityMachineList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.infinitycrop.ui.list_machine;\r\n\r\nimport android.content.Intent;\r\nimport android.media.Image;\r\nimport android.os.Bundle;\r\nimport android.os.Parcelable;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.ItemTouchHelper;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.infinitycrop.MainActivity;\r\nimport com.example.infinitycrop.R;\r\nimport com.example.infinitycrop.ui.logmail.RegisterActivity;\r\nimport com.firebase.ui.firestore.FirestoreRecyclerAdapter;\r\nimport com.firebase.ui.firestore.FirestoreRecyclerOptions;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.Query;\r\n\r\nimport java.text.BreakIterator;\r\nimport java.util.Map;\r\n\r\npublic class MainActivityMachineList extends AppCompatActivity {\r\n    private FirebaseFirestore firebaseFirestore;\r\n    private RecyclerView mFirestoreList;\r\n    private Adapter adapter;\r\n    private FirebaseAuth firebaseAuth;\r\n    Button addBtn;//boton a√±adir nueva maquina\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_list_machines);\r\n        firebaseFirestore=FirebaseFirestore.getInstance();\r\n        mFirestoreList=findViewById(R.id.firestore_list);\r\n        firebaseAuth=FirebaseAuth.getInstance();\r\n        String uid=firebaseAuth.getUid();\r\n        //Query\r\n        Query query=firebaseFirestore\r\n                .collection(\"Machine\")\r\n                .whereEqualTo(\"userUID\", uid)\r\n                .orderBy(\"priority\",Query.Direction.ASCENDING);\r\n        //RecyclerView\r\n        FirestoreRecyclerOptions<MachineModel> options=new FirestoreRecyclerOptions.Builder<MachineModel>()\r\n                .setQuery(query, MachineModel.class)\r\n                .build();\r\n        //View Holder\r\n        adapter= new Adapter(options);\r\n        mFirestoreList.setHasFixedSize(true);\r\n        mFirestoreList.setLayoutManager(new LinearLayoutManager(this));\r\n        mFirestoreList.setAdapter(adapter);\r\n\r\n        new ItemTouchHelper(new ItemTouchHelper.SimpleCallback(0,\r\n                ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT) {\r\n            @Override\r\n            public boolean onMove(RecyclerView recyclerView, RecyclerView.ViewHolder viewHolder, RecyclerView.ViewHolder target) {\r\n                return false;\r\n            }\r\n            @Override\r\n            public void onSwiped(RecyclerView.ViewHolder viewHolder, int direction) {\r\n                Toast.makeText(getApplicationContext(), \"Maquina eliminada con √©xito\", Toast.LENGTH_SHORT).show();\r\n                adapter.deleteItem(viewHolder.getAdapterPosition());\r\n            }\r\n        }).attachToRecyclerView(mFirestoreList);\r\n\r\n        adapter.setOnItemClickListener(new Adapter.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(DocumentSnapshot documentSnapshot, int position) {\r\n                //documentSnapshot.getData() -> devuelve all que tiene la maquina en firebase\r\n                MachineModel machine = documentSnapshot.toObject(MachineModel.class);\r\n                String id = documentSnapshot.getId();\r\n                String path = documentSnapshot.getReference().getPath(); //devuelve ruta en firebase Machine\\madara\r\n                /*Toast.makeText(MainActivityMachineList.this,\r\n                        \"Position: \" + position + \" ID: \" + id +\"  algo   \"+ documentSnapshot.getData(), Toast.LENGTH_SHORT).show();*/\r\n                Intent intent = new Intent(getBaseContext(), MainActivity.class);\r\n                intent.putExtra(\"machine\", id);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        FloatingActionButton addbtn = (FloatingActionButton) findViewById(R.id.button_add_machine);\r\n        addbtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent (getApplicationContext(), AddMachine.class);\r\n                startActivity(intent);\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        adapter.stopListening();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        adapter.startListening();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/infinitycrop/ui/list_machine/MainActivityMachineList.java	(revision 38f77cc52ec1598af6f795fb72fde847b8f0c5cf)
+++ app/src/main/java/com/example/infinitycrop/ui/list_machine/MainActivityMachineList.java	(date 1609360236960)
@@ -80,11 +80,12 @@
                 //documentSnapshot.getData() -> devuelve all que tiene la maquina en firebase
                 MachineModel machine = documentSnapshot.toObject(MachineModel.class);
                 String id = documentSnapshot.getId();
-                String path = documentSnapshot.getReference().getPath(); //devuelve ruta en firebase Machine\madara
+                String path = documentSnapshot.getString("description"); //devuelve ruta en firebase Machine\madara
                 /*Toast.makeText(MainActivityMachineList.this,
                         "Position: " + position + " ID: " + id +"  algo   "+ documentSnapshot.getData(), Toast.LENGTH_SHORT).show();*/
                 Intent intent = new Intent(getBaseContext(), MainActivity.class);
                 intent.putExtra("machine", id);
+                intent.putExtra("description", path);
                 startActivity(intent);
             }
         });
